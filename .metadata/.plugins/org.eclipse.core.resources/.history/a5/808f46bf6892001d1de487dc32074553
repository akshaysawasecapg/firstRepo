package mapReduceDistinctEx;

import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class TextCallable implements Callable{
	List<String> itemList = new LinkedList<String>();

	@Override
	public Object call() throws Exception {
		// TODO Auto-generated method stub
		itemList.add("Coffee");
		itemList.add("Tea");
		itemList.add("Espresso");
		itemList.add("Regular Coffee");
		
		return itemList;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		ExecutorService ex = Executors.newFixedThreadPool(4);
		TextCallable tx = new TextCallable();
//		Callable task = ()-> 
		Future f = ex.submit(tx);
		
		
	}
	
}
